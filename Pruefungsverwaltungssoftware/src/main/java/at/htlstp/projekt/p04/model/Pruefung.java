package at.htlstp.projekt.p04.model;
// Generated 13.12.2016 11:01:59 by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Pruefung generated by hbm2java
 */
@Entity
@Table(name = "pruefung", schema = "public"
)
@SequenceGenerator(name="pruef_seq", sequenceName="pruef_seq", allocationSize=1)
public class Pruefung implements java.io.Serializable {

    private int pruefId;
    private Set<Kompetenzbereich> kompetenzbereiche = new HashSet<>(0);
    private Lehrer lehrer;
    private Schueler schueler;
    private Date pruefDatum;
    private Boolean pruefAbsolviert;

    public Pruefung() {
        this(null, null, null, null, false);
    }

    public Pruefung(int pruefId, Date pruefDatum) {
        this.pruefId = pruefId;
        this.pruefDatum = pruefDatum;
    }

    public Pruefung(Set<Kompetenzbereich> kompetenzbereiche, Lehrer lehrer, Schueler schueler, Date pruefDatum) {
        this.kompetenzbereiche = kompetenzbereiche;
        this.lehrer = lehrer;
        this.schueler = schueler;
        this.pruefDatum = pruefDatum;
    }
    
    public Pruefung(Set<Kompetenzbereich> kompetenzbereiche, Lehrer lehrer, Schueler schueler, Date pruefDatum, Boolean pruefAbsolviert) {
        this.kompetenzbereiche = kompetenzbereiche;
        this.lehrer = lehrer;
        this.schueler = schueler;
        this.pruefDatum = pruefDatum;
        this.pruefAbsolviert = pruefAbsolviert;
    }
    
    public Pruefung(int pruefId, Set<Kompetenzbereich> kompetenzbereiche, Lehrer lehrer, Schueler schueler, Date pruefDatum) {
        this.pruefId = pruefId;
        this.kompetenzbereiche = kompetenzbereiche;
        this.lehrer = lehrer;
        this.schueler = schueler;
        this.pruefDatum = pruefDatum;
    }

    @Id
    @GeneratedValue(generator = "pruef_seq")
    @Column(name = "pruef_id", unique = true, nullable = false)
    public int getPruefId() {
        return this.pruefId;
    }

    public void setPruefId(int pruefId) {
        this.pruefId = pruefId;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "pruef_nach_komp", schema = "public", joinColumns = {
        @JoinColumn(name = "pruef_id", nullable = false, updatable = false)}, inverseJoinColumns = {
        @JoinColumn(name = "komp_id", nullable = false, updatable = false)})
    public Set<Kompetenzbereich> getKompetenzbereiche() {
        return this.kompetenzbereiche;
    }

    public void setKompetenzbereiche(Set<Kompetenzbereich> kompetenzbereiche) {
        this.kompetenzbereiche = kompetenzbereiche;
    }

    @ManyToOne
    @JoinColumn(name = "pruef_lehrer_kb")
    public Lehrer getLehrer() {
        return this.lehrer;
    }

    public void setLehrer(Lehrer lehrer) {
        this.lehrer = lehrer;
    }

    @ManyToOne
    @JoinColumn(name = "pruef_ssd_id")
    public Schueler getSchueler() {
        return this.schueler;
    }

    public void setSchueler(Schueler schueler) {
        this.schueler = schueler;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "pruef_datum", nullable = false, length = 13)
    public Date getPruefDatum() {
        return this.pruefDatum;
    }

    public void setPruefDatum(Date pruefDatum) {
        this.pruefDatum = pruefDatum;
    }

    @Column(name = "pruef_absolviert", nullable = false)
    public Boolean getPruefAbsolviert() {
        return pruefAbsolviert;
    }

    public void setPruefAbsolviert(Boolean pruefAbsolviert) {
        this.pruefAbsolviert = pruefAbsolviert;
    }
    
}
